const t=({initialState:t,context:e,onStateChange:a})=>{let i={value:t,context:e};return{getState:()=>i,setState:(t,e)=>{i={value:null!=t?t:i.value,context:null!=e?e:i.context},a(i)}}};var e,a,i,r;!function(t){t.initializing="INITIALIZING",t.selectTask="SELECT_TASK",t.task="TASK",t.taskCompletePrompt="TASK_COMPLETE_PROMPT",t.taskVoidPrompt="TASK_VOID_PROMPT",t.taskTimerEndPrompt="TASK_TIMER_END_PROMPT",t.shortBreak="SHORT_BREAK",t.longBreak="LONG_BREAK"}(e||(e={})),function(t){t.idle="IDLE",t.active="ACTIVE"}(a||(a={})),function(t){t.idle="IDLE",t.ready="READY",t.active="ACTIVE",t.paused="PAUSED"}(i||(i={})),function(t){t.task="TASK",t.shortBreak="SHORT_BREAK",t.longBreak="LONG_BREAK"}(r||(r={}));const n=({onStateChange:e,onTimerEnd:a,onTimerTick:r,ticker:n})=>{const{getState:s,setState:o}=t({initialState:i.idle,context:{timer:null},onStateChange:e}),m=()=>{const{timer:t}=s().context;t&&(1===t.time?(o(i.idle,{timer:null}),n.stop(),a(t)):o(null,{timer:Object.assign(Object.assign({},t),{time:t.time-1})}))};return{createTimer:({isInjected:t=!1,time:e,type:a})=>{o(i.ready,{timer:{isInjected:t,time:e,totalTime:e,type:a}})},destroyTimer:()=>{o(i.idle,{timer:null}),n.stop()},pauseTimer:()=>{o(i.paused),n.stop()},startTimer:()=>{o(i.active),n.start((()=>{m(),r()}))},getState:s}};module.exports=({createTicker:s,settings:o})=>{let m=o;const{batchedEmit:c,emit:l,on:T,off:k}=(()=>{const t={},e=new Map,a=(e,a)=>{var i;null===(i=t[e])||void 0===i||i.forEach((t=>t(a)))};return{batchedEmit:(t,i)=>{e.size>0?e.set(t,i):(e.set(t,i),setImmediate((()=>{for(const[t,i]of e)a(t,i);e.clear()})))},emit:a,off:(e,a)=>{const i=t[e];i&&(t[e]=i.filter((t=>t!==a)))},on:(e,a)=>{var i;const r=null!==(i=t[e])&&void 0!==i?i:[];r.push(a),t[e]=r}}})(),u=()=>{c("update",I())},d=(({onStateChange:a})=>{const{getState:i,setState:r}=t({initialState:e.initializing,context:{currentTaskId:null},onStateChange:a});return{completeTask:()=>{r(e.taskCompletePrompt)},getState:i,selectTask:t=>{r(e.task,{currentTaskId:t})},setAppState:t=>{r(t)},switchTask:()=>{r(e.selectTask,{currentTaskId:null})},unsetCurrentTask:()=>{r(null,{currentTaskId:null})},voidTask:()=>{r(e.taskVoidPrompt)}}})({onStateChange:u}),p=n({onStateChange:u,onTimerEnd:t=>{const a=Object.assign(Object.assign({},t),{time:0});l("timerEnd",g(a)),t.isInjected||h(),d.getState().value===e.task?(d.setAppState(e.taskTimerEndPrompt),l("taskEnd",g(a))):E(),S.startOvertimeCountdown({delay:m.overtimeDelay,type:t.type})},onTimerTick:()=>{l("timerTick",g())},ticker:s()}),S=(({onOvertimeStart:e,onOvertimeTick:i,onStateChange:r,ticker:n})=>{const{getState:s,setState:o}=t({initialState:a.idle,context:{overtime:null},onStateChange:r});let m=null;const c=()=>{const{overtime:t}=s().context;t&&(o(null,{overtime:Object.assign(Object.assign({},t),{time:t.time+1})}),i())};return{endOvertime:()=>{s().value===a.active?(o(a.idle,{overtime:null}),n.stop()):m&&(m(),m=null)},startOvertimeCountdown:({delay:t,type:i})=>{m=n.wait((()=>{o(a.active,{overtime:{time:t,type:i}}),n.start(c),e()}),t)},getState:s}})({onOvertimeStart:()=>{l("overtimeStart",g())},onOvertimeTick:()=>{l("overtimeTick",g())},onStateChange:u,ticker:s()});let v=0;const g=t=>{const e=t||p.getState().context.timer;return{taskId:d.getState().context.currentTaskId,timer:e?{time:e.time,totalTime:e.totalTime,type:e.type}:null,overtime:S.getState().context.overtime,timestamp:Date.now()}},h=()=>{v+=1,v>=m.set.length&&(v=0)},E=()=>{const t=m.set[v];if("task"===t)return d.getState().context.currentTaskId?(p.getState().context.timer?l("taskStart",g()):p.createTimer({time:m.taskTime,type:r.task}),d.setAppState(e.task)):d.setAppState(e.selectTask);if("shortBreak"===t)return p.createTimer({time:m.shortBreakTime,type:r.shortBreak}),d.setAppState(e.shortBreak);if("longBreak"===t)return p.createTimer({time:m.longBreakTime,type:r.longBreak}),d.setAppState(e.longBreak);throw new Error(`Unknown set item: "${t}"`)},I=()=>{const t=d.getState(),e=p.getState(),a=S.getState(),r=e.context.timer?{isActive:e.value===i.active,isInjected:e.context.timer.isInjected,isPaused:e.value===i.paused,time:e.context.timer.time,totalTime:e.context.timer.totalTime,type:e.context.timer.type}:null;return{value:t.value,currentTaskId:t.context.currentTaskId,timer:r,overtime:a.context.overtime}},y=()=>{var t;S.getState().value===a.active&&l("overtimeEnd",g()),S.endOvertime();const e=p.getState(),n=e.value===i.paused,s=(null===(t=e.context.timer)||void 0===t?void 0:t.type)===r.task;n?l("timerResume",g()):(l("timerStart",g()),s&&l("taskStart",g())),p.startTimer()},x=()=>{l("taskVoid",g()),p.getState().value===i.active&&p.destroyTimer(),d.voidTask()};return{completeTask:()=>{d.completeTask()},getState:I,off:k,on:T,pauseTimer:()=>{p.pauseTimer(),l("timerPause",g())},selectTask:t=>{d.selectTask(t),E(),l("taskSelect",g())},setReady:()=>{E(),l("appInitialize",g())},skipTimer:()=>{l("timerSkip",g()),p.destroyTimer(),h(),E()},startTimer:y,switchTask:()=>{l("taskEnd",g()),d.switchTask()},taskCompleteHandled:()=>{d.unsetCurrentTask(),E()},taskTimerEndPromptHandled:t=>{if("voidTask"===t)return v-=1,v<0&&(v=m.set.length-1),x();"switchTask"===t&&d.unsetCurrentTask(),E(),y()},updateSettings:t=>{m=t},voidPromptHandled:()=>{d.setAppState(e.shortBreak),p.createTimer({isInjected:!0,time:m.shortBreakTime,type:r.shortBreak}),y()},voidTask:x}};
